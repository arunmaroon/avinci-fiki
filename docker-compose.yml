version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: avinci-postgres
    environment:
      POSTGRES_DB: avinci
      POSTGRES_USER: avinci_user
      POSTGRES_PASSWORD: avinci_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - avinci-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: avinci-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - avinci-network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: avinci-backend
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://avinci_user:avinci_password@postgres:5432/avinci
      - REDIS_URL=redis://redis:6379
      - PORT=9001
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - PINECONE_API_KEY=${PINECONE_API_KEY}
      - PINECONE_INDEX_NAME=${PINECONE_INDEX_NAME:-persona-vectors}
      - GROK_API_KEY=${GROK_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - TWILIO_ACCOUNT_SID=${TWILIO_ACCOUNT_SID}
      - TWILIO_AUTH_TOKEN=${TWILIO_AUTH_TOKEN}
      - TWILIO_API_KEY=${TWILIO_API_KEY}
      - TWILIO_API_SECRET=${TWILIO_API_SECRET}
      - TWILIO_TWIML_APP_SID=${TWILIO_TWIML_APP_SID}
      - ELEVENLABS_API_KEY=${ELEVENLABS_API_KEY}
      - DEEPGRAM_API_KEY=${DEEPGRAM_API_KEY}
      - PEXELS_API_KEY=${PEXELS_API_KEY}
      - DATA_PROCESSING_URL=http://data-processing:8000
      - FRONTEND_URL=http://frontend:9000
    ports:
      - "9001:9001"
    depends_on:
      - postgres
      - redis
    volumes:
      - ./backend:/app
      - /app/node_modules
      - ./uploads:/app/uploads
      - audio_temp:/app/uploads/audio
    networks:
      - avinci-network

  # Frontend React App
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: avinci-frontend
    environment:
      - REACT_APP_API_URL=http://localhost:9001/api
      - PORT=9000
    ports:
      - "9000:9000"
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - avinci-network

  # Data Processing Service
  data-processing:
    build:
      context: ./data-processing
      dockerfile: Dockerfile
    container_name: avinci-data-processing
    environment:
      - DATABASE_URL=postgresql://avinci_user:avinci_password@postgres:5432/avinci
      - REDIS_URL=redis://redis:6379
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENAI_MODEL=${OPENAI_MODEL:-gpt-4}
      - PINECONE_API_KEY=${PINECONE_API_KEY}
      - PINECONE_INDEX_NAME=${PINECONE_INDEX_NAME:-persona-vectors}
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=avinci
      - DB_USER=avinci_user
      - DB_PASSWORD=avinci_password
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - redis
    volumes:
      - ./data-processing:/app
      - ./uploads:/app/uploads
      - ./transcripts:/app/transcripts
    command: uvicorn api:app --host 0.0.0.0 --port 8000 --reload
    networks:
      - avinci-network

  # Research Service for Advanced Analytics
  research:
    build:
      context: ./data-processing
      dockerfile: Dockerfile
    container_name: avinci-research
    environment:
      - DATABASE_URL=postgresql://avinci_user:avinci_password@postgres:5432/avinci
      - REDIS_URL=redis://redis:6379
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - PINECONE_API_KEY=${PINECONE_API_KEY}
      - PINECONE_INDEX_NAME=${PINECONE_INDEX_NAME:-persona-vectors}
      - SERVICE_TYPE=research
    ports:
      - "8001:8001"
    depends_on:
      - postgres
      - redis
      - backend
    volumes:
      - ./data-processing:/app
      - ./uploads:/app/uploads
      - ./transcripts:/app/transcripts
      - ./analytics:/app/analytics
    networks:
      - avinci-network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: avinci-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    networks:
      - avinci-network

volumes:
  postgres_data:
  redis_data:
  audio_temp:
    driver: local

networks:
  avinci-network:
    driver: bridge
